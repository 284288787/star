<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.star.truffle.module.order.dao.read.OrderDetailReadDao">
  <resultMap id="orderDetailResultMap" type="com.star.truffle.module.order.domain.OrderDetail">
    <result column="id" property="id" />
    <result column="order_id" property="orderId" />
    <result column="product_id" property="productId" />
    <result column="title" property="title" />
    <result column="main_picture_url" property="mainPictureUrl" />
    <result column="original_price" property="originalPrice" />
    <result column="price" property="price" />
    <result column="brokerage" property="brokerage" />
    <result column="pickup_time" property="pickupTime" />
    <result column="specification" property="specification" />
    <result column="count" property="count" />
    <result column="product_info" property="productInfo" />
  </resultMap>

  <sql id="sql_column">
    id, order_id, product_id, title, main_picture_url, original_price, price, brokerage, pickup_time, specification, count, product_info
  </sql>

  <select id="getOrderDetails" resultMap="orderDetailResultMap">
    select
    <include refid="sql_column" />
    from order_detail
    where order_id = #{orderId}
    order by id
  </select>
  
  <select id="getProductNoPayNumber" resultType="java.lang.Long">
    select
    IFNULL(sum(d.count),0)
    from order_detail d 
    where d.product_id = #{productId} and exists (select * from `order` o where o.order_id = d.order_id and o.state = #{state})
  </select>
  
  <resultMap id="orderDetailResponseResultMap" type="com.star.truffle.module.order.dto.res.OrderDetailResponseDto">
    <result column="count" property="count" />
    <result column="create_time" property="createTime" />
    <result column="member_id" property="memberId" />
    <result column="head" property="head" />
    <result column="name" property="name" />
  </resultMap>
  
  <select id="buyRecord" resultMap="orderDetailResponseResultMap">
    SELECT d.count, o.create_time, o.member_id, m.head, CONCAT(left(m.`name`, 1), '***') `name`
    from order_detail d 
    LEFT JOIN `order` o on d.order_id = o.order_id
    LEFT JOIN member_info m on m.member_id = o.member_id
    where 
      o.state in (2,3) and d.product_id = #{productId}
    limit #{pager.startIndex}, #{pager.pageSize}
  </select>
  
  <resultMap id="buyRecordTotalResult" type="HashMap">  
		<result column="members" property="members"/>  
    <result column="counts" property="counts" />
	</resultMap>

  <select id="buyRecordTotal" resultMap="buyRecordTotalResult">
    SELECT count(DISTINCT m.member_id) members, SUM(d.count) counts
    from order_detail d 
    LEFT JOIN `order` o on d.order_id = o.order_id
    LEFT JOIN member_info m on m.member_id = o.member_id
    where 
      o.state in (2,3)
  </select>
</mapper>